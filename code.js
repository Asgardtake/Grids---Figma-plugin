// –ü–æ–∫–∞–∑–≤–∞–º–µ UI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å —Ñ–∏–∫—Å–∏—Ä–∞–Ω —Ä–∞–∑–º–µ—Ä
figma.showUI(__html__, { width: 500, height: 660 });

// –û—Å–Ω–æ–≤–µ–Ω listener –∑–∞ —Å—ä–æ–±—â–µ–Ω–∏—è –æ—Ç UI
figma.ui.onmessage = async (msg) => {
  // –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ Frame –∏ –ø—Ä–∏–ª–∞–≥–∞–Ω–µ –Ω–∞ Grid
  if (msg.type === 'execute-grid') {
    console.log("üöÄ –°—ä–∑–¥–∞–≤–∞–º–µ –Ω–æ–≤ Frame –∏ –ø—Ä–∏–ª–∞–≥–∞–º–µ Grid...");
    console.log("–ü–æ–ª—É—á–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:", msg);

    const frame = figma.createFrame();
    frame.resize(msg.width, msg.height);
    frame.name = "Assassins Grid Frame";

    // –¶–µ–Ω—Ç—Ä–∏—Ä–∞–º–µ –≥–æ
    frame.x = figma.viewport.center.x - msg.width / 2;
    frame.y = figma.viewport.center.y - msg.height / 2;

    // –ü—Ä–∏–ª–∞–≥–∞–Ω–µ –Ω–∞ layout grid
    frame.layoutGrids = [{
      pattern: "COLUMNS",
      sectionSize: msg.columnWidth,
      gutterSize: msg.gutter,
      count: msg.count,
      alignment: msg.alignment.toUpperCase(), // ‚Üê –¢–£–ö –ï –§–ò–ö–°–™–¢
      color: { r: 1, g: 0, b: 0 }, // #FF0000
      opacity: msg.opacity,
      visible: true,
      offset: 0
    }];

    // –î–æ–±–∞–≤—è–º–µ –≥–æ –∫—ä–º —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ –∏ —Ü–µ–Ω—Ç—Ä–∏—Ä–∞–º–µ –∏–∑–≥–ª–µ–¥–∞
    figma.currentPage.appendChild(frame);
    figma.viewport.scrollAndZoomIntoView([frame]);

    // –§–∏–Ω–∞–ª–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞—Ç–≤–∞—Ä—è–Ω–µ
    figma.notify("‚úÖ Grid —É—Å–ø–µ—à–Ω–æ —Å—ä–∑–¥–∞–¥–µ–Ω!");
    figma.closePlugin();
  }
};
